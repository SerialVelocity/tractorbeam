---
- name: Create a temp directory to stage the backup
  tempfile:
    state: directory
    prefix: "files-{{ _backup.bucket }}-{{ _backup_timestamp }}"
  register: _files_temp_dir
  when:
    - _backup.cacheDir is not defined
- name: Create a cache directory for the backup
  file:
    state: directory
    path: "{{ _backup.cacheDir }}"
    owner: "backup"
    group: "backup"
    mode: "u=rwx,g=rxw,o=rwx"
  when:
    - _backup.cacheDir is defined
- name: Sync files from remote
  shell: >
    rsync
    {% for _option in _backup.options | default(['-az']) %}
    {{ _option }}{{ ' ' }}
    {% endfor %}
    -e "ssh -i {{ _backup.identityFile }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {% if _backup.port is defined %}-p {{ _backup.port }}{% endif %}"
    {% for _exclude in _backup.excludes | default(_tractorbeam_default_files_excludes) %}
    --exclude={{ _exclude }}{{ ' ' }}
    {% endfor %}
    {% if _backup.delete | default(true) %}
    --delete
    {% endif %}
    --force
    --chown=backup:backup
    {{ _backup.user }}@{{ _backup.src }}:{{ _backup.path }}/
    {{ _backup.cacheDir | default(_files_temp_dir.path) }}
- name: Sync directory to target S3
  shell: >
    s3cmd sync
    {% for _exclude in _backup.excludes | default(_tractorbeam_default_files_excludes) %}
    --exclude="{{ _exclude }}"{{ '' }}
    {% endfor %}
    {% if _backup.delete | default(true) %}
    --delete-removed
    {% endif %}
    {% if (flightdeck_debug | default(false)) != true %}
    --quiet
    {% elif lookup('env', 'ANSIBLE_VERBOSITY') == 4 %}
    --debug
    {% else %}
    --verbose
    {% endif %}
    {% if _backup.endpoint is defined %}
    --host="{{ _backup.endpoint | regex_replace('[A-z]*://', '') }}"
    --host-bucket="{{ _backup.bucketUrl | default(_backup.bucket + '.' + _backup.endpoint) | regex_replace('[A-z]*://', '') }}"
    {% endif %}
    {% if _backup.region is defined %}
    --region="{{ _backup.region }}"
    {% endif %}
    {% if _backup.accessKeyFile is defined %}
    --access_key="{{ lookup('file', _backup.accessKeyFile) }}"
    {% elif _backup.accessKey is defined %}
    --access_key="{{ _backup.accessKey }}"
    {% endif %}
    {% if _backup.secretKeyFile is defined %}
    --secret_key="{{ lookup('file', _backup.secretKeyFile) }}"
    {% elif _backup.secretKey is defined %}
    --secret_key="{{ _backup.secretKey }}"
    {% endif %}
    --acl-private
    --recursive
    {{ _backup.cacheDir | default(_files_temp_dir.path) }}/
    s3://{{ _backup.bucket }}/{{ _backup.prefix }}/
- name: delete stage directory
  file:
    path: "_files_temp_dir.path"
    state: absent
  when:
    - _files_temp_dir.path is defined
- include_tasks: "healhcheck.yml"
