---
- name: Backup database
  mysql_db:
    state: dump
    name: "{{ _bucket.name }}"
    target: "{{ _run_temp_dir.path }}/{{ _bucket.name }}_{{ _backup_timestamp }}.sql.gz"
    login_host: "{{ _bucket.host | default('localhost') }}"
    login_port: "{{ _bucket.port | default('3306') | int }}"
    login_user: "{{ _bucket.user | default(omit) }}"
    login_password: "{{ _bucket.password | default(omit) }}"
  no_log: "{{ tractorbeam_db_nolog | default(true) }}"
- name: Push backup to S3
  aws_s3:
    bucket: "{{ _bucket.bucket }}"
    object: "{{ _bucket.prefix | default('') }}/db-backups/{{ tractorbeam_db_scope | default('') }}/{{ _bucket.name }}_{{ _backup_timestamp }}.sql.gz"
    src: "{{ _run_temp_dir.path }}/{{ _bucket.name }}_{{ _backup_timestamp }}.sql.gz"
    mode: put
    s3_url: "{{ _bucket.endpoint | default(omit) }}"
    region: "{{ _bucket.region | default(omit) }}"
    encrypt: no
    permission: private
    aws_access_key: "{{ _bucket.access_key }}"
    aws_secret_key: "{{ _bucket.secret_key }}"
  no_log: "{{ tractorbeam_db_nolog | default(true) }}"
- name: Get list of files
  aws_s3:
    bucket: "{{ _bucket.bucket }}"
    prefix: "{{ _bucket.prefix }}/db-backups/{{ tractorbeam_db_scope | default('') }}"
    mode: list
    aws_access_key: "{{ _bucket.access_key }}"
    aws_secret_key: "{{ _bucket.secret_key }}"
    s3_url: "{{ _bucket.endpoint | default(omit) }}"
  register: _list_bucket
- name: Filter and sort the list of files
  set_fact:
    _list_bucket_sorted: "{{ _list_bucket.s3_keys | select('regex', _regex) | list | sort }}"
  vars:
    _regex: "{{ _bucket.name }}_[0-9]{14}\\.sql\\.gz"
  no_log: "{{ tractorbeam_db_nolog | default(true) }}"
- name: Delete old backups
  aws_s3:
    bucket: "{{ _bucket.bucket }}"
    prefix: "{{ _bucket.prefix }}/db-backups/{{ tractorbeam_db_scope | default('') }}"
    mode: delobj
    object: "{{ item }}"
    aws_access_key: "{{ _bucket.access_key }}"
    aws_secret_key: "{{ _bucket.secret_key }}"
    s3_url: "{{ _bucket.endpoint | default(omit) }}"
  loop: "{{ _list_bucket_sorted[:-(_retain_count | int)] }}"
  no_log: "{{ tractorbeam_db_nolog | default(true) }}"
